# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys, time, pandas as pd, datetime
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5.QtWidgets import QDialog, QFileDialog
from os import system

class This_Thread(QThread):
    change_value = pyqtSignal(int)
    
    def loading(self):
        Bar = 0
        while Bar < 100:
            Bar += 1

            time.sleep(0.3)
            self.change_value.emit(Bar)
            print(Bar)


class Ui_MainWindow(QDialog):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(445, 314)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)

        #Kolom pilih file
        self.path_file = QtWidgets.QLineEdit(self.centralwidget)
        self.path_file.setObjectName("path_file")
        self.verticalLayout_2.addWidget(self.path_file)

        #Box Horizontal
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        #1 Tombol Masterfile
        self.button_masterfile = QtWidgets.QPushButton(self.centralwidget)
        self.button_masterfile.setObjectName("button_masterfile")
        self.horizontalLayout_2.addWidget(self.button_masterfile)
        #2 Tombol Masterspt
        self.button_masterspt = QtWidgets.QPushButton(self.centralwidget)
        self.button_masterspt.setObjectName("button_masterspt")
        self.horizontalLayout_2.addWidget(self.button_masterspt)

        #Box Vertikal
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_2.addItem(spacerItem)
        #Box Horizontal
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)

        #Tombol Convert
        self.button_convert = QtWidgets.QPushButton(self.centralwidget)
        self.button_convert.setObjectName("button_convert")
        self.horizontalLayout_3.addWidget(self.button_convert)

        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)

        #Label Status
        self.label_status = QtWidgets.QLabel(self.centralwidget)
        self.label_status.setObjectName("label_status")
        self.verticalLayout_2.addWidget(self.label_status)

        #Progress Bar
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setTextVisible(True)
        #self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        #self.progressBar.setHidden(False)
        self.horizontalLayout_5.addWidget(self.progressBar)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)

        #Programmer
        self.label_programmer = QtWidgets.QLabel(self.centralwidget)
        self.label_programmer.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_programmer.setObjectName("label_programmer")
        self.verticalLayout_2.addWidget(self.label_programmer)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MasterFS to Excel"))
        MainWindow.setToolTip(_translate("MainWindow", "Tool sederhana untuk konversi file CSV Masterfile dan Masterspt menjadi Excel"))
        self.label.setText(_translate("MainWindow", "Pilih file:"))
        self.button_masterfile.setText(_translate("MainWindow", "MASTERFILE"))
        self.button_masterspt.setText(_translate("MainWindow", "MASTERSPT"))
        self.button_convert.setText(_translate("MainWindow", "Convert"))
        self.label_status.setText(_translate("MainWindow", ""))
        self.label_programmer.setToolTip(_translate("MainWindow", "seimpairiyun.github.io"))
        self.label_programmer.setText(_translate("MainWindow", "Powered by m.afizha96@gmail.com"))


        self.button_masterfile.clicked.connect(self.getMasterfile_CSV)
        self.button_masterspt.clicked.connect(self.start_LoadingBar)
        self.button_convert.clicked.connect(self.validasi_file)

    def start_LoadingBar(self):
        self.thread = This_Thread()
        self.thread.change_value.connect(self.value_LoadingBar)
        self.thread.start()

        
    
    def countdown(self):
        x = 0
        for x in range(100):
            time.sleep(0.01)
            x += 1
            print(x)
            #sys.stdout.write('\r',x)

    def value_LoadingBar(self, val):
        self.progressBar.setValue(val)


    def getMasterfile_CSV(self):
        BrowseFile = QFileDialog.getOpenFileName(None, '', '', '*.csv')
        PathFile = str(BrowseFile).replace("('",'').replace("', '*.csv')",'').replace("', '')",'')
        #PathFile = BrowseFile

        if PathFile.find("masterfile") > 1:
            self.label_status.setText("file masterfile")
        else:
            self.label_status.setText("bukan masterfile")

        self.path_file.setText(str(PathFile))
        print(BrowseFile)

        FileName = PathFile.find(".",1,None)
        print(PathFile[FileName-3:FileName:])

    def validasi_file(self):
        try:
            file_input = self.path_file.text()
            if file_input == "":
                self.path_file.setFocus()
            else:
                self.csv_to_xlsx()
        except FileNotFoundError:
            self.path_file.setFocus()


    def csv_to_xlsx(self):
        #self.progressBar.setHidden(False)
        file_input = self.path_file.text()
        #file_output = "master.xlsx"
        file_output = pd.ExcelWriter("master.xlsx")

        #berapa lama selesai?
        app_start = datetime.datetime.now()

        pd.read_csv(file_input,
                    delimiter=";",
                    low_memory=False,
                    dtype={'NPWP': str,
                        'KD_KPP': str,
                        'KD_CABANG': str,
                        'KODE_POS': str,
                        'NOMOR_TELEPON': str,
                        'EMAIL': str,
                        'NOMOR_IDENTITAS': str,
                        'KODE_KLU': str,
                        'NIP_AR': str,
                        'NIP_JS': str,
                        'NIP_EKS': str}
                    ).to_excel(file_output, index=False)
        file_output.save()

        #lihat_typedata = pd.read_csv(file_input, delimiter=";")
        #print(lihat_typedata.dtypes)


        #berapa lama selesai.
        app_stop = datetime.datetime.now()
        selisih = app_stop - app_start
        durasi = divmod(selisih.seconds, 60)
        endTime = durasi[0], 'menit', durasi[1], 'detik'

        file_input_name = self.path_file.text()

        self.label_status.setText(str(endTime).replace(',','').replace('(','').replace(')','').replace("'",'')+"<br>"+ file_input_name)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
